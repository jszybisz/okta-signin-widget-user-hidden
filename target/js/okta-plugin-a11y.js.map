{"version":3,"file":"okta-plugin-a11y.js","mappings":"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","sources":["webpack://OktaPluginA11y/webpack/universalModuleDefinition","webpack://OktaPluginA11y/./src/plugins/OktaPluginA11y.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"OktaPluginA11y\"] = factory();\n\telse\n\t\troot[\"OktaPluginA11y\"] = factory();\n})(self, function() {\nreturn ","import { OktaSignInAPI } from '../types/api';\nimport { EventContext } from '../types/events';\nimport { WidgetOptions } from '../types/options';\n\n/**\n * This plugin improves the accessibility (a11y) of the Okta sign in widget to\n * comply with WCAG2.1AA (https://www.w3.org/TR/WCAG21/) standards and Section\n * 508 (https://www.section508.gov/)\n *\n * @param widget instance of OktaSignIn\n * @param options options for a11y plugin\n */\nexport const init = (widget: OktaSignInAPI & { options: WidgetOptions }): void => {\n  const brandName = widget.options?.brandName;\n\n  widget.on('afterRender', function (context: EventContext) {\n    const title = document.querySelector('.okta-form-title')?.textContent;\n    if (title) {\n      document.title = brandName ? `${brandName} - ${title}` : title;\n    }\n\n    function setAttrs(selector: string, attributes: Record<string, string>) {\n      const elements = document.querySelectorAll(selector) || [];\n      const keys = Object.keys(attributes) || [];\n      elements.forEach((el) => {\n        keys.forEach((key) => {\n          el.setAttribute(key, attributes[key]);\n        })\n      });\n    }\n\n    /**\n     * Hide authenticator icon from screen readers to prevent redundancy. The \n     * sibling element .authenticator-description conveys the same information.\n     * \n     * https://www.w3.org/WAI/tutorials/images/decision-tree/\n     * https://www.w3.org/WAI/tutorials/images/decorative/\n     */\n    document.querySelectorAll('.authenticator-list').forEach((list) => {\n      list.querySelectorAll('.authenticator-row')\n        .forEach((row) => {\n          row.querySelector('.authenticator-icon')\n            ?.setAttribute('aria-hidden', '');\n        });\n    });\n\n    // identify page autocomplete attrs\n    setAttrs('input[name=\"identifier\"]', { autocomplete: 'username' });\n\n    // register page autocomplete attrs\n    setAttrs('input[name=\"userProfile.email\"]', { autocomplete: 'email' });\n    setAttrs('input[name=\"userProfile.lastName\"]', { autocomplete: 'family-name' });\n    setAttrs('input[name=\"userProfile.firstName\"]', { autocomplete: 'given-name' });\n\n    document.querySelectorAll('.password-toggle')\n      .forEach((toggle) => {\n        const container = toggle.parentNode;\n        if (!container) {\n          // should not be reached\n          console.warn('Could not find parent node of \".password-toggle\"');\n          return;\n        }\n\n        // find the <input> element\n        const input = container?.querySelector<HTMLInputElement>('.password-with-toggle');\n\n        if (!input) {\n          // should not be reached\n          console.warn('Could not find input element \".password-with-toggle\"');\n          return;\n        }\n\n        // NOTE: replace <span> (non-interactive) elements with buttons to make\n        // them keyboard-focusable and set appropriate aria atttributes/roles\n        const children = [...toggle.children];\n        children.forEach((span) => toggle.removeChild(span)); // FIXME\n        const button = document.createElement('button');\n        const updateButton = () => {\n          const isVisible = input.type !== 'password';\n          button.type = 'button';\n          if (isVisible) {\n            button.ariaLabel = 'Hide password';\n            button.className = 'eyeicon visibility-off-16';\n          } else {\n            button.ariaLabel = 'Show password';\n            button.className = 'eyeicon visibility-16';\n          }\n        };\n        updateButton();\n        button.onclick = () => {\n          input.type = input.type === 'password' ? 'text' : 'password';\n          updateButton();\n        }\n        toggle.appendChild(button);\n      });\n\n    // Pages with \"resend\" links/buttons that appear after a delay (default: 30s),\n    // e.g., \"Resend email\", \"Resend SMS\"\n    const RESEND_PAGES = [\n      {\n        controller: 'mfa-verify-passcode',\n        formName: 'challenge-authenticator',\n        authenticatorKey: 'phone_number',\n        methodType: 'sms',\n      },\n      {\n        controller: \"enroll-email\",\n        formName: \"enroll-authenticator\",\n        authenticatorKey: \"okta_email\",\n        methodType: \"email\"\n      },\n      {\n        controller: \"mfa-verify\",\n        formName: \"challenge-poll\",\n        authenticatorKey: \"okta_verify\",\n        methodType: \"push\"\n      },\n      {\n        controller: \"forgot-password\",\n        formName: \"identify-recovery\"\n      },\n    ];\n\n    // cheap check for shallow equality\n    const isEqual = (a,b) => [...Object.keys(a)].every((k) => a[k] === b[k]);\n\n    if (RESEND_PAGES.some(page => isEqual(page, context))) {\n      let count = 0;\n      const intervalWarning = setInterval(() => {\n        console.log('interval: infobox-warning')\n        if (document.querySelector('.infobox-warning')) {\n          document.querySelectorAll('.infobox-warning')\n            .forEach((box) => {\n              if (count === 0) {\n                // element already exists in DOM, just hidden, set aria\n                box.setAttribute('aria-live', 'assertive');\n              } else {\n                // remove\n                const parent = box.parentElement;\n                parent?.removeChild(box);\n                box.setAttribute('aria-live', 'assertive');\n                parent?.appendChild(box);\n              }\n            })\n          console.log('clearing interval: infobox-warning')\n          clearInterval(intervalWarning)\n        }\n        count++;\n      }, 1500);\n\n      const intervalResend = setInterval(() => {\n        if (document.querySelector('.resend-link')) {\n          console.log('interval: resend-link')\n          document.querySelectorAll('.resend-link')\n            .forEach((link) => link.setAttribute('href', '#'))\n          console.log('clearing interval: resend-link')\n          clearInterval(intervalResend)\n        }\n      }, 1500);\n    }\n  });\n}\n"],"names":["root","factory","exports","module","define","amd","self","widget","_widget$options","brandName","options","on","context","_document$querySelect","title","document","querySelector","textContent","setAttrs","selector","attributes","elements","querySelectorAll","keys","Object","forEach","el","key","setAttribute","concat","list","row","_row$querySelector","autocomplete","toggle","container","parentNode","input","_toConsumableArray","children","span","removeChild","button","createElement","updateButton","isVisible","type","ariaLabel","className","onclick","appendChild","controller","formName","authenticatorKey","methodType","some","page","a","b","every","k","count","intervalWarning","setInterval","box","parent","parentElement","clearInterval","intervalResend","link"],"sourceRoot":""}