{"version":3,"file":"PasswordRequirements.js","sources":["../../../../../../src/v1/views/shared/PasswordRequirements.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { View } from '@okta/courage';\nimport hbs from '@okta/handlebars-inline-precompile';\nimport FactorUtil from 'util/FactorUtil';\nexport default View.extend({\n  template: hbs`{{#if requirements}}\n      <div class=\"password-requirements--header\">\n        {{i18n code=\"password.complexity.requirements.header\" bundle=\"login\"}}\n      </div>\n      <ul class=\"password-requirements--list\">\n          {{#each requirements}}<li class=\"password-requirements--list-item\">{{this}}</li>{{/each}}\n      </ul>\n    {{/if}}`,\n\n  attributes: {\n    'data-se': 'password-requirements-html',\n  },\n\n  allRequirements: [],\n\n  initialize: function(options) {\n    const policy = options.policy;\n\n    if (!policy) {\n      return;\n    }\n\n    this.allRequirements = FactorUtil.getPasswordComplexityDescriptionForHtmlList(policy);\n  },\n\n  getTemplateData: function() {\n    return {\n      requirements: this.allRequirements,\n    };\n  },\n});\n"],"names":["View","extend","template","_Handlebars2","1","container","depth0","helpers","partials","data","stack1","alias1","nullContext","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","undefined","escapeExpression","hooks","helperMissing","program","noop","2","lambda","main","attributes","allRequirements","initialize","options","policy","FactorUtil","getPasswordComplexityDescriptionForHtmlList","getTemplateData","requirements"],"mappings":";;;;;;;;;;;;AAeA,2BAAeA,IAAI,CAACC,MAAM,CAAC;EACzBC,QAAQ,EAAAC,YAAA,CAAAD,QAAA,CAAA;IAAA,GAAAE,EAAAA,UAAAC,SAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,IAAA,EAAA;AAAA,MAAA,IAAAC,MAAA;AAAAC,QAAAA,MAAA,GAAAL,MAAA,IAAA,IAAA,GAAAA,MAAA,GAAAD,SAAA,CAAAO,WAAA,IAAA,EAAA;AAAAC,QAAAA,cAAA,GAAAR,SAAA,CAAAQ,cAAA,IAAAC,UAAAA,MAAA,EAAAC,YAAA,EAAA;UAAA,IAAAC,MAAA,CAAAC,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAL,MAAA,EAAAC,YAAA,CAAA,EAAA;YAAA,OAAAD,MAAA,CAAAC,YAAA,CAAA,CAAA;AAAA,WAAA;AAAA,UAAA,OAAAK,SAAA,CAAA;AAAA,SAAA,CAAA;MAAA,OAAAf,+CAAAA,GAAAA,SAAA,CAAAgB,gBAAA,CAAA,CAAAR,cAAA,CAAAN,OAAA,EAAAD,MAAAA,CAAAA,IAAAA,MAAA,IAAAO,cAAA,CAAAP,MAAA,EAAA,MAAA,CAAA,IAAAD,SAAA,CAAAiB,KAAA,CAAAC,aAAA,EAAAJ,IAAA,CAAAR,MAAA,EAAA;AAAA,QAAA,MAAA,EAAA,MAAA;AAAA,QAAA,MAAA,EAAA;AAAA,UAAA,QAAA,EAAA,OAAA;AAAA,UAAA,MAAA,EAAA,yCAAA;AAAA,SAAA;AAAA,QAAA,MAAA,EAAAF,IAAA;AAAA,QAAA,KAAA,EAAA;AAAA,UAAA,OAAA,EAAA;AAAA,YAAA,MAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA,EAAA;AAAA,WAAA;AAAA,UAAA,KAAA,EAAA;AAAA,YAAA,MAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA,GAAA;AAAA,WAAA;AAAA,SAAA;AAAA,OAAA,CAAA,CAAA,GAAA,kDAAA,IAAA,CAAAC,MAAA,GAAAG,cAAA,CAAAN,OAAA,UAAAY,IAAA,CAAAR,MAAA,EAAAL,MAAA,IAAAO,IAAAA,GAAAA,cAAA,CAAAP,MAAA,oBAAAA,MAAA,EAAA;AAAA,QAAA,MAAA,EAAA,MAAA;AAAA,QAAA,MAAA,EAAA,EAAA;AAAA,QAAA,IAAA,EAAAD,SAAA,CAAAmB,OAAA,CAAA,CAAA,EAAAf,IAAA,EAAA,CAAA,CAAA;QAAA,SAAAJ,EAAAA,SAAA,CAAAoB,IAAA;AAAA,QAAA,MAAA,EAAAhB,IAAA;AAAA,QAAA,KAAA,EAAA;AAAA,UAAA,OAAA,EAAA;AAAA,YAAA,MAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA,GAAA;AAAA,WAAA;AAAA,UAAA,KAAA,EAAA;AAAA,YAAA,MAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA,GAAA;AAAA,WAAA;AAAA,SAAA;AAAA,OAAA,CAAA,KAAA,IAAA,GAAAC,MAAA,GAAA,EAAA,CAAA,GAAA,OAAA,CAAA;AAAA,KAAA;IAAA,GAAAgB,EAAAA,UAAArB,SAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,IAAA,EAAA;MAAA,OAAAJ,iDAAAA,GAAAA,SAAA,CAAAgB,gBAAA,CAAAhB,SAAA,CAAAsB,MAAA,CAAArB,MAAA,EAAAA,MAAA,CAAA,CAAA,GAAA,OAAA,CAAA;AAAA,KAAA;AAAA,IAAA,UAAA,EAAA,CAAA,CAAA,EAAA,UAAA,CAAA;IAAA,MAAAsB,EAAAA,UAAAvB,SAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,IAAA,EAAA;AAAA,MAAA,IAAAC,MAAA;AAAAG,QAAAA,cAAA,GAAAR,SAAA,CAAAQ,cAAA,IAAAC,UAAAA,MAAA,EAAAC,YAAA,EAAA;UAAA,IAAAC,MAAA,CAAAC,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAL,MAAA,EAAAC,YAAA,CAAA,EAAA;YAAA,OAAAD,MAAA,CAAAC,YAAA,CAAA,CAAA;AAAA,WAAA;AAAA,UAAA,OAAAK,SAAA,CAAA;AAAA,SAAA,CAAA;MAAA,OAAAV,CAAAA,MAAA,GAAAG,cAAA,CAAAN,OAAA,EAAAY,IAAAA,CAAAA,CAAAA,IAAA,CAAAb,MAAA,IAAAA,IAAAA,GAAAA,MAAA,GAAAD,SAAA,CAAAO,WAAA,IAAAN,EAAAA,EAAAA,MAAA,WAAAO,cAAA,CAAAP,MAAA,EAAA,cAAA,CAAA,GAAAA,MAAA,EAAA;AAAA,QAAA,MAAA,EAAA,IAAA;AAAA,QAAA,MAAA,EAAA,EAAA;AAAA,QAAA,IAAA,EAAAD,SAAA,CAAAmB,OAAA,CAAA,CAAA,EAAAf,IAAA,EAAA,CAAA,CAAA;QAAA,SAAAJ,EAAAA,SAAA,CAAAoB,IAAA;AAAA,QAAA,MAAA,EAAAhB,IAAA;AAAA,QAAA,KAAA,EAAA;AAAA,UAAA,OAAA,EAAA;AAAA,YAAA,MAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA,CAAA;AAAA,WAAA;AAAA,UAAA,KAAA,EAAA;AAAA,YAAA,MAAA,EAAA,CAAA;AAAA,YAAA,QAAA,EAAA,GAAA;AAAA,WAAA;AAAA,SAAA;AAAA,OAAA,CAAA,KAAA,IAAA,GAAAC,MAAA,GAAA,EAAA,CAAA;AAAA,KAAA;AAAA,IAAA,SAAA,EAAA,IAAA;GAOE,CAAA;AAEVmB,EAAAA,UAAU,EAAE;AACV,IAAA,SAAS,EAAE,4BAAA;GACZ;AAEDC,EAAAA,eAAe,EAAE,EAAE;AAEnBC,EAAAA,UAAU,EAAE,UAASC,OAAO,EAAE;AAC5B,IAAA,MAAMC,MAAM,GAAGD,OAAO,CAACC,MAAM,CAAA;IAE7B,IAAI,CAACA,MAAM,EAAE;AACX,MAAA,OAAA;AACF,KAAA;IAEA,IAAI,CAACH,eAAe,GAAGI,EAAU,CAACC,2CAA2C,CAACF,MAAM,CAAC,CAAA;GACtF;EAEDG,eAAe,EAAE,YAAW;IAC1B,OAAO;MACLC,YAAY,EAAE,IAAI,CAACP,eAAAA;KACpB,CAAA;AACH,GAAA;AACF,CAAC,CAAC;;;;"}