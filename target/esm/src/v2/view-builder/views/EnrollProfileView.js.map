{"version":3,"file":"EnrollProfileView.js","sources":["../../../../../../src/v2/view-builder/views/EnrollProfileView.js"],"sourcesContent":["import { loc, Model, _ } from '@okta/courage';\nimport { BaseForm, BaseFooter, BaseView, createIdpButtons } from '../internals';\nimport { FORMS as RemediationForms } from '../../ion/RemediationConstants';\nimport { getPasswordComplexityDescriptionForHtmlList } from '../utils/AuthenticatorUtil';\nimport { generatePasswordPolicyHtml } from './password/PasswordPolicyUtil';\nimport signInWithIdps from './signin/SignInWithIdps';\n\nconst Body = BaseForm.extend({\n  title() {\n    if (this.options.appState.getCurrentViewState().href.endsWith('idp/idx/enroll/update')) {\n      const attributes = this.options.appState.attributes;\n      if (attributes?.uiDisplay?.label) {\n        return loc('oie.registration.form.customize.label', 'login', [attributes.uiDisplay.label]);\n      } else {\n        return loc('oie.primaryauth.submit', 'login');\n      }\n    }\n    return loc('oie.registration.form.title', 'login');\n\n  },\n\n  save() {\n    if (this.options.appState.getCurrentViewState().href.endsWith('idp/idx/enroll/update')) {\n      const attributes = this.options.appState.attributes;\n      if (attributes?.uiDisplay?.buttonLabel) {\n        return loc('oie.registration.form.customize.buttonLabel', 'login', [attributes.uiDisplay.buttonLabel]);\n      } else {\n        return loc('oie.registration.form.update.submit', 'login');\n      }\n    }\n    return loc('oie.registration.form.submit', 'login');\n\n  },\n  saveForm() {\n    // SIW customization hook for registration\n    this.settings.preRegistrationSubmit(this.model.toJSON(),\n      (postData) => {\n        this.model.attributes = {...this.model.attributes, ...this.model.parse(postData)};\n        BaseForm.prototype.saveForm.call(this, this.model);\n      },\n      (error) => this.model.trigger('error', this.model, {\n        responseJSON: error,\n      })\n    );\n  },\n  triggerAfterError(model, error) {\n    // render errors to view\n    const hasErrors = error?.responseJSON?.errorCauses\n      && Array.isArray(error.responseJSON.errorCauses);\n\n    if (hasErrors) {\n      error.responseJSON.errorCauses.forEach((err) => {\n        // only do this for invalid password for password with SSR\n        if (err.errorKey?.includes('password.passwordRequirementsNotMet')) {\n          err.errorSummary = loc('registration.error.password.passwordRequirementsNotMet', 'login');\n        } \n      });\n    }\n\n    this.options.appState.trigger('afterError', error);\n  },\n});\n\nconst Footer = BaseFooter.extend({\n  links() {\n    const links = [];\n    if (this.options.appState.hasRemediationObject(RemediationForms.SELECT_IDENTIFY)) {\n      links.push({\n        'type': 'link',\n        'label': loc('haveaccount', 'login'),\n        'name': 'back',\n        'actionPath': RemediationForms.SELECT_IDENTIFY,\n      });\n    }\n    return links;\n  }\n});\n\nexport default BaseView.extend({\n  Body,\n  Footer,\n  createModelClass(currentViewState, optionUiSchemaConfig, settings) {\n    const currentSchema = JSON.parse(JSON.stringify((currentViewState.uiSchema)));\n    let ModelClass = BaseView.prototype.createModelClass.apply(this, arguments, currentViewState);\n\n    ModelClass = ModelClass.extend({\n      toJSON: function() {\n        const modelJSON = Model.prototype.toJSON.call(this, arguments, currentViewState);\n        // delete optional attributes if they are empty and not required\n        if(modelJSON.userProfile) {\n          const uiSchema = currentViewState.uiSchema;\n          const userProfile = modelJSON.userProfile;\n          _.each(userProfile, (value, name) => {\n            if (_.isEmpty(value)) {\n              const uiSchemaProperty = uiSchema.find(schema => schema.name === `userProfile.${name}`);\n              if (!_.isUndefined(uiSchemaProperty) && !uiSchemaProperty.required) {\n                delete userProfile[name];\n              }\n            }\n          });\n        }\n        return modelJSON;\n      }\n    });\n\n    settings.parseRegistrationSchema(currentSchema,\n      (schema) => {\n        if (!_.isEqual(schema, currentViewState.uiSchema)) {\n          currentViewState.uiSchema = schema;\n          ModelClass = BaseView.prototype.createModelClass.call(this, currentViewState, optionUiSchemaConfig);\n        }\n      },\n      (error) => {\n        ModelClass = ModelClass.extend({\n          local: {\n            parseSchemaError: {\n              value: error,\n              type: 'object',\n            },\n            ...ModelClass.prototype.local\n          },\n        });\n      }\n    );\n    return ModelClass;\n  },\n  postRender() {\n    BaseView.prototype.postRender.apply(this, arguments);\n\n    const modelError = this.model.get('parseSchemaError');\n\n    if (modelError) {\n      this.model.trigger('error', this.model, {\n        responseJSON: modelError,\n      });\n    }\n\n    // Prompt for password w/ SSR if enabled (credentials object in remediation)\n    this.renderPasswordPolicySettings();\n\n    const idpButtons = createIdpButtons(this.options);\n    if (Array.isArray(idpButtons) && idpButtons.length) {\n      this._addIdpView(idpButtons);\n    }\n    \n  },\n  renderPasswordPolicySettings() {\n    // retrieve password policy from \"credentials\" object in remediation\n    const currentViewState = this.options.currentViewState.value;\n    const credentials = currentViewState.filter((obj) => { return obj.name === 'credentials'; })[0];\n\n    // if \"passcode\" is present in \"credentials\", render password rules\n    const form = credentials?.form?.value;\n    if (form && form.filter((obj) => { return obj.name === 'passcode'; })) {\n      generatePasswordPolicyHtml(this,\n        getPasswordComplexityDescriptionForHtmlList(credentials?.relatesTo?.value?.settings),\n        false);\n    }\n  },\n\n  _addIdpView(idpButtons) {\n    // We check the 'idpDisplay' option config to determine whether to render the idp buttons \n    // above or below the login fields\n    const idpDisplay = this.options.settings.get('idpDisplay');\n    const isPrimaryIdpDisplay = idpDisplay && idpDisplay.toUpperCase() === 'PRIMARY';\n\n    this.add(signInWithIdps, {\n      prepend: isPrimaryIdpDisplay,\n      selector: isPrimaryIdpDisplay ? '.o-form-fieldset-container' : '.o-form-button-bar',\n      options: {\n        idpButtons,\n        isPrimaryIdpDisplay\n      }\n    });\n  },\n});\n"],"names":["Body","BaseForm","extend","title","options","appState","getCurrentViewState","href","endsWith","_attributes$uiDisplay","attributes","uiDisplay","label","loc","save","_attributes$uiDisplay2","buttonLabel","saveForm","settings","preRegistrationSubmit","model","toJSON","postData","parse","prototype","call","error","trigger","responseJSON","triggerAfterError","_error$responseJSON","hasErrors","errorCauses","Array","isArray","forEach","err","_err$errorKey","errorKey","includes","errorSummary","Footer","BaseFooter","links","hasRemediationObject","RemediationForms","SELECT_IDENTIFY","push","BaseView","createModelClass","currentViewState","optionUiSchemaConfig","currentSchema","JSON","stringify","uiSchema","ModelClass","apply","arguments","modelJSON","Model","userProfile","_","each","value","name","isEmpty","uiSchemaProperty","find","schema","isUndefined","required","parseRegistrationSchema","isEqual","local","parseSchemaError","type","postRender","modelError","get","renderPasswordPolicySettings","idpButtons","createIdpButtons","length","_addIdpView","_credentials$form","credentials","filter","obj","form","_credentials$relatesT","_credentials$relatesT2","generatePasswordPolicyHtml","getPasswordComplexityDescriptionForHtmlList","relatesTo","idpDisplay","isPrimaryIdpDisplay","toUpperCase","add","signInWithIdps","prepend","selector"],"mappings":"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"}