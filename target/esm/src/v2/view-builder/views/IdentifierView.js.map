{"version":3,"file":"IdentifierView.js","sources":["../../../../../../src/v2/view-builder/views/IdentifierView.js"],"sourcesContent":["import { _, loc, createCallout } from '@okta/courage';\nimport { FORMS as RemediationForms } from '../../ion/RemediationConstants';\nimport { BaseForm, BaseView, createIdpButtons, createCustomButtons } from '../internals';\nimport CryptoUtil from '../../../util/CryptoUtil';\nimport DeviceFingerprinting from '../utils/DeviceFingerprinting';\nimport IdentifierFooter from '../components/IdentifierFooter';\nimport Link from '../components/Link';\nimport signInWithIdps from './signin/SignInWithIdps';\nimport customButtonsView from './signin/CustomButtons';\nimport signInWithDeviceOption from './signin/SignInWithDeviceOption';\nimport signInWithWebAuthn from './signin/SignInWithWebAuthn';\nimport { isCustomizedI18nKey, getMessageFromBrowserError } from '../../ion/i18nTransformer';\nimport { getForgotPasswordLink } from '../utils/LinksUtil';\nimport CookieUtil from 'util/CookieUtil';\nimport CustomAccessDeniedErrorMessage from './shared/CustomAccessDeniedErrorMessage';\nimport Util from 'util/Util';\nimport webauthn from '../../../util/webauthn';\n\nconst CUSTOM_ACCESS_DENIED_KEY = 'security.access_denied_custom_message';\n\n\nconst Body = BaseForm.extend({\n\n  title() {\n    return loc('primaryauth.title', 'login');\n  },\n\n  save() {\n    return loc('oform.next', 'login');\n  },\n\n  initialize() {\n    BaseForm.prototype.initialize.apply(this, arguments);\n\n    const uiSchema = this.getUISchema();\n    if (uiSchema.find(schema => schema.name === 'credentials.passcode')) {\n      this.save = loc('oie.primaryauth.submit', 'login');\n    }\n\n    // Precedence for pre-filling identifier field:\n    // 1. Use username/identifier from the config.\n    // 2. Use identifier value returned in remediation response (model will have this attr set if it's there)\n    // 3. Use value from the \"remember my username\" cookie.\n    if (this.options.settings.get('suppressIdentifierDisplay')) {\n      // ðŸ”’ Don't set any identifier if suppression is enabled\n      this.model.set('identifier', '');\n    } else if (this._shouldAddUsername(uiSchema)) {\n      this.model.set('identifier', this.settings.get('username'));\n    } else if (!this.model.get('identifier') && this._shouldApplyRememberMyUsername(uiSchema)) {\n      this._applyRememberMyUsername();\n    }\n  },\n\n  saveForm() {\n    // Before the XHR is made for \"identify\", we'll generate one-time use fingerprint via\n    // a hidden-iframe (similar to authn/v1 flows)\n\n    // Ideally this can be added to a \"preSaveForm\" handler - but keeping this here for now.\n    if (!this.settings.get('features.deviceFingerprinting')) {\n      BaseForm.prototype.saveForm.apply(this, arguments);\n      return;\n    }\n\n    // Toggle Form saving status (e.g. disabling save button, etc)\n    this.model.trigger('request');\n\n    // For certain flows, we need to generate a device fingerprint\n    // to determine if we need to send a \"New Device Sign-on Notification\".\n    const authClient = this.settings.getAuthClient();\n    DeviceFingerprinting.generateDeviceFingerprint(authClient, this.$el[0])\n      .then(fingerprint => {\n        this.options.appState.set('deviceFingerprint', fingerprint);\n      })\n      .catch(() => { /* Keep going even if device fingerprint fails */ })\n      .finally(() => {\n        BaseForm.prototype.saveForm.apply(this, arguments);\n      });\n  },\n\n  render() {\n    BaseForm.prototype.render.apply(this, arguments);\n\n    // Launch Device Authenticator\n    if (this.options.appState.hasRemediationObject(RemediationForms.LAUNCH_AUTHENTICATOR)) {\n      this.add(signInWithDeviceOption, '.o-form-fieldset-container', false, true, { isRequired: false });\n    }\n\n    if (this.options.appState.hasRemediationObject(RemediationForms.LAUNCH_WEBAUTHN_AUTHENTICATOR)) {\n      this.add(signInWithWebAuthn, '.o-form-fieldset-container', false, true, { isRequired: false });\n    }\n\n    // add forgot password link and external idps buttons if needed\n    const idpButtons = createIdpButtons(this.options);\n    if (Array.isArray(idpButtons) && idpButtons.length) {\n      // Add the forgot password link before the buttons for multiple IDPs\n      this._addForgotPasswordView();\n      this._addIdpView(idpButtons);\n    }\n\n    const customButtons = createCustomButtons(this.options.settings);\n    if (Array.isArray(customButtons) && customButtons.length) {\n      this.add(customButtonsView, {\n        selector: '.o-form-button-bar',\n        options: {\n          customButtons,\n          addSeparateLine: true,\n        }\n      });\n    }\n  },\n\n  postRender() {\n    BaseForm.prototype.postRender.apply(this, arguments);\n    // When a user enters invalid credentials, /introspect returns an error,\n    // along with a user object containing the identifier entered by the user.\n    this.$el.find('.identifier-container').remove();\n    this.getCredentialsAndInvokeAction();\n  },\n\n  /**\n   * Update UI schemas for customization from .widgetrc.js or Admin Customization settings page.\n   * @returns Array\n   */\n  getUISchema() {\n    const schemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n\n    const { settings } = this.options;\n    const identifierExplainLabeli18nKey = 'primaryauth.username.tooltip';\n    const passwordExplainLabeli18nKey = 'primaryauth.password.tooltip';\n\n    let newSchemas = schemas.map(schema => {\n      let newSchema = { ...schema };\n\n      if (schema.name === 'identifier') {\n        if (this.options.settings.get('suppressIdentifierDisplay')) {\n          return null; // ðŸ”’ Remove the field entirely\n        }\n        if (isCustomizedI18nKey(identifierExplainLabeli18nKey, settings)) {\n          newSchema = {\n            ...newSchema,\n            explain: loc(identifierExplainLabeli18nKey, 'login'),\n            'explain-top': true,\n          };\n        }\n\n        const isAutoFillUIChallenge =\n          this.options.appState.hasRemediationObject(RemediationForms.CHALLENGE_WEBAUTHN_AUTOFILLUI_AUTHENTICATOR);\n        // Setting the autocomplete value to 'webauthn' allows the browser to list passkeys alongside usernames\n        const autoCompleteDefaultValue = isAutoFillUIChallenge && webauthn.isConditionalMediationAvailable()\n          ? 'username webauthn'\n          : 'username';\n        // We enable the browser's autocomplete for the identifier input\n        // because we want to allow the user to choose from previously used identifiers.\n        newSchema = {\n          ...newSchema,\n          autoComplete: Util.getAutocompleteValue(this.options.settings, autoCompleteDefaultValue)\n        };\n      } else if (schema.name === 'credentials.passcode') {\n        newSchema = {\n          ...newSchema,\n          autoComplete: Util.getAutocompleteValue(this.options.settings, 'current-password')\n        };\n\n        if (isCustomizedI18nKey(passwordExplainLabeli18nKey, settings)) {\n          newSchema = {\n            ...newSchema,\n            explain: loc(passwordExplainLabeli18nKey, 'login'),\n            'explain-top': true,\n          };\n        }\n      }\n\n      return newSchema;\n    });\n\n    // If showKeepMeSignedIn is explicitly set to false, we ensure we don't display\n    // the \"Keep me signed in\" checkbox\n    if (this.settings.get('features.showKeepMeSignedIn') === false) {\n      newSchemas = newSchemas.filter(schema => schema.name !== 'rememberMe');\n    }\n    return newSchemas.filter(Boolean); \n  },\n\n  showCustomFormErrorCallout(error, messages) {\n    if (!error?.responseJSON?.errorSummaryKeys?.includes(CUSTOM_ACCESS_DENIED_KEY)) {\n      return false;\n    }\n\n    const message = messages?.find(message => message.i18n.key === CUSTOM_ACCESS_DENIED_KEY);\n    if (!message) {\n      return false;\n    }\n\n    const { errorSummary } = error.responseJSON;\n\n    const options = {\n      type: 'error',\n      content: new CustomAccessDeniedErrorMessage({\n        message: errorSummary,\n        links: message.links,\n      }),\n    };\n\n    this.showMessages(createCallout(options));\n    return true;\n  },\n\n  remove() {\n    BaseForm.prototype.remove.apply(this, arguments);\n    if (this.webauthnAbortController) {\n      this.webauthnAbortController.abort();\n      this.webauthnAbortController = null;\n    }\n  },\n\n  async getCredentialsAndInvokeAction() {\n    const challengeData = this.options.appState.get('webauthnAutofillUIChallenge')?.challengeData;\n    const isPasskeyAutofillAvailable = await webauthn.isPasskeyAutofillAvailable();\n    if (!challengeData || !isPasskeyAutofillAvailable || typeof AbortController === 'undefined') {\n      return;\n    }\n\n    const options = _.extend({}, challengeData, {\n      challenge: CryptoUtil.strToBin(challengeData.challenge),\n    });\n\n    // There is already a check to make sure the browser supports AbortController\n    // eslint-disable-next-line compat/compat\n    this.webauthnAbortController = new AbortController();\n\n    // There is already a check to make sure the browser supports WebAuthn\n    // eslint-disable-next-line compat/compat\n    navigator.credentials.get({\n      mediation: 'conditional',\n      publicKey: options,\n      signal: this.webauthnAbortController.signal\n    }).then((assertion) => {\n      const userHandle = CryptoUtil.binToStr(assertion.response.userHandle ?? '');\n      if (_.isEmpty(userHandle)) {\n        const errorSummary = loc('oie.webauthn.error.invalidPasskey', 'login');\n        this.model.trigger('error', this.model, this._generateErrorObject(errorSummary));\n        return;\n      }\n      const credentials = {\n        clientData: CryptoUtil.binToStr(assertion.response.clientDataJSON),\n        authenticatorData: CryptoUtil.binToStr(assertion.response.authenticatorData),\n        signatureData: CryptoUtil.binToStr(assertion.response.signature),\n        userHandle\n      };\n\n      this.options.appState.trigger(\n        'invokeAction',\n        RemediationForms.CHALLENGE_WEBAUTHN_AUTOFILLUI_AUTHENTICATOR, \n        { credentials }\n      );\n    }, (error) => {\n      // Do not display if it is abort error triggered by code when switching.\n      // this.webauthnAbortController would be null if abort was triggered by code.\n      if (this.webauthnAbortController) {\n        const errorSummary = getMessageFromBrowserError(error);\n        this.model.trigger('error', this.model, this._generateErrorObject(errorSummary));\n      }\n    }).finally(() => {\n      // unset webauthnAbortController on successful authentication or error\n      this.webauthnAbortController = null;\n    });\n  },\n\n  _generateErrorObject(errorSummary) {\n    return {\n      responseJSON: { errorSummary }\n    };\n  },\n\n  _addForgotPasswordView() {\n    const forgotPasswordLink = getForgotPasswordLink(this.options.appState, this.options.settings);\n    if (forgotPasswordLink.length) {\n      this.add('<div class=\"links-primary\"></div>', { selector: '.o-form-button-bar' });\n      this.add(Link, {\n        selector: '.links-primary',\n        options: forgotPasswordLink[0],\n      });\n    }\n  },\n\n  _addIdpView(idpButtons) {\n    // We check the 'idpDisplay' option config to determine whether to render the idp buttons\n    // above or below the login fields\n    const idpDisplay = this.options.settings.get('idpDisplay');\n    const isPrimaryIdpDisplay = idpDisplay && idpDisplay.toUpperCase() === 'PRIMARY';\n\n    this.add(signInWithIdps, {\n      prepend: isPrimaryIdpDisplay,\n      selector: isPrimaryIdpDisplay ? '.o-form-fieldset-container' : '.o-form-button-bar',\n      options: {\n        idpButtons,\n        isPrimaryIdpDisplay\n      }\n    });\n  },\n\n  _shouldAddUsername(uiSchema) {\n    // We pre-populate the identifier/username field only if we're in an identifier\n    // form and if the option is passed in.\n    return (uiSchema.find(schema => schema.name === 'identifier') && this.settings.get('username'));\n  },\n\n  _shouldApplyRememberMyUsername(uiSchema) {\n    return (uiSchema.find(schema => schema.name === 'identifier')\n        && this.settings.get('features.rememberMe'));\n  },\n\n  /**\n   * When \"Remember My Username\" is enabled, we pre-fill the identifier\n   * field with the saved userName cookie. The cookie would have been originally\n   * saved when submitting the form previously.\n   */\n  _applyRememberMyUsername() {\n    const cookieUsername = CookieUtil.getCookieUsername();\n    if (cookieUsername) {\n      this.model.set('identifier', cookieUsername);\n    }\n  }\n});\n\nexport default BaseView.extend({\n  Body,\n\n  createModelClass() {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n\n    // customize pre-submit form validation inline error messages\n    const identifierRequiredi18nKey = 'error.username.required';\n    const passwordRequiredi18nKey = 'error.password.required';\n    const props = ModelClass.prototype.props;\n    const validate = (attr) => {\n      const inlineErrors = {};\n      const isEmptyIdentifier = props['identifier'] && !attr?.['identifier'];\n      const isEmptyPassword = props['credentials.passcode'] && !attr?.['credentials.passcode'];\n      if (isEmptyIdentifier && isCustomizedI18nKey(identifierRequiredi18nKey, this.settings)) {\n        inlineErrors['identifier'] = loc(identifierRequiredi18nKey, 'login');\n      }\n      if (isEmptyPassword && isCustomizedI18nKey(passwordRequiredi18nKey, this.settings)) {\n        inlineErrors['credentials.passcode'] = loc(passwordRequiredi18nKey, 'login');\n      }\n      return inlineErrors;\n    };\n\n    return ModelClass.extend({\n      validate\n    });\n  },\n\n  initialize() {\n    // Override Footer by overriding showForgotPasswordLink method\n    this.Footer = IdentifierFooter.extend({\n      showForgotPasswordLink: () => {\n        // We don't add the forgot password link in the footer if SIW renders multi IDPs,\n        // instead in that case we add it before the IDP buttons in IdentifierView as primary links.\n        const idpButtons = createIdpButtons(this.options);\n        return (!this.options.appState.isIdentifierOnlyView() &&\n          (!Array.isArray(idpButtons) || idpButtons.length === 0));\n      }\n    });\n  },\n\n  postRender() {\n    BaseView.prototype.postRender.apply(this, arguments);\n\n    // If user entered identifier is not found, API sends back a message with a link to sign up\n    // This is the click handler for that link\n    const appState = this.options.appState;\n    this.$el.find('.js-sign-up').click(function() {\n      appState.trigger('invokeAction', RemediationForms.SELECT_ENROLL_PROFILE);\n      return false;\n    });\n  },\n});\n"],"names":["CUSTOM_ACCESS_DENIED_KEY","Body","BaseForm","extend","title","loc","save","initialize","prototype","apply","arguments","uiSchema","getUISchema","find","schema","name","options","settings","get","model","set","_shouldAddUsername","_shouldApplyRememberMyUsername","_applyRememberMyUsername","saveForm","trigger","authClient","getAuthClient","DeviceFingerprinting","generateDeviceFingerprint","$el","then","fingerprint","appState","catch","finally","render","hasRemediationObject","RemediationForms","LAUNCH_AUTHENTICATOR","add","signInWithDeviceOption","isRequired","LAUNCH_WEBAUTHN_AUTHENTICATOR","signInWithWebAuthn","idpButtons","createIdpButtons","Array","isArray","length","_addForgotPasswordView","_addIdpView","customButtons","createCustomButtons","customButtonsView","selector","addSeparateLine","postRender","remove","getCredentialsAndInvokeAction","schemas","identifierExplainLabeli18nKey","passwordExplainLabeli18nKey","newSchemas","map","newSchema","isCustomizedI18nKey","explain","isAutoFillUIChallenge","CHALLENGE_WEBAUTHN_AUTOFILLUI_AUTHENTICATOR","autoCompleteDefaultValue","webauthn","isConditionalMediationAvailable","autoComplete","Util","getAutocompleteValue","filter","Boolean","showCustomFormErrorCallout","error","messages","_error$responseJSON","_error$responseJSON$e","responseJSON","errorSummaryKeys","includes","message","i18n","key","errorSummary","type","content","CustomAccessDeniedErrorMessage","links","showMessages","createCallout","webauthnAbortController","abort","_this$options$appStat","challengeData","isPasskeyAutofillAvailable","AbortController","_","challenge","CryptoUtil","strToBin","navigator","credentials","mediation","publicKey","signal","assertion","_assertion$response$u","userHandle","binToStr","response","isEmpty","_generateErrorObject","clientData","clientDataJSON","authenticatorData","signatureData","signature","getMessageFromBrowserError","forgotPasswordLink","getForgotPasswordLink","Link","idpDisplay","isPrimaryIdpDisplay","toUpperCase","signInWithIdps","prepend","cookieUsername","CookieUtil","getCookieUsername","BaseView","createModelClass","ModelClass","identifierRequiredi18nKey","passwordRequiredi18nKey","props","validate","attr","inlineErrors","isEmptyIdentifier","isEmptyPassword","Footer","IdentifierFooter","showForgotPasswordLink","isIdentifierOnlyView","click","SELECT_ENROLL_PROFILE"],"mappings":"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"}