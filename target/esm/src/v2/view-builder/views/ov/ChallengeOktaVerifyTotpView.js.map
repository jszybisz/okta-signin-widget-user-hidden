{"version":3,"file":"ChallengeOktaVerifyTotpView.js","sources":["../../../../../../../src/v2/view-builder/views/ov/ChallengeOktaVerifyTotpView.js"],"sourcesContent":["import { loc, createCallout } from '@okta/courage';\nimport { BaseForm } from '../../internals';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\n\nconst OV_UV_ENABLE_BIOMETRIC_SERVER_KEY = 'oie.authenticator.oktaverify.method.totp.verify.enable.biometrics';\n\nconst Body = BaseForm.extend(Object.assign(\n  {\n    className: 'okta-verify-totp-challenge',\n\n    title() {\n      return loc('oie.okta_verify.totp.title', 'login');\n    },\n\n    save() {\n      return loc('mfa.challenge.verify', 'login');\n    },\n\n    showCustomFormErrorCallout(error) {\n      const errorSummaryKeys = error?.responseJSON?.errorSummaryKeys;\n      let options;\n      if (errorSummaryKeys && errorSummaryKeys.includes(OV_UV_ENABLE_BIOMETRIC_SERVER_KEY)) {\n        options = {\n          type: 'error',\n          className: 'okta-verify-uv-callout-content',\n          title: loc('oie.authenticator.app.method.push.verify.enable.biometrics.title', 'login'),\n          subtitle: loc('oie.authenticator.app.method.push.verify.enable.biometrics.description', 'login'),\n          bullets: [\n            loc('oie.authenticator.app.method.push.verify.enable.biometrics.point1', 'login'),\n            loc('oie.authenticator.app.method.push.verify.enable.biometrics.point2', 'login'),\n            loc('oie.authenticator.app.method.push.verify.enable.biometrics.point3', 'login')\n          ],\n        };\n        this.showMessages(createCallout(options));\n        return true;\n      }\n    },\n  },\n));\n\nexport default BaseAuthenticatorView.extend({\n  Body,\n});\n"],"names":["OV_UV_ENABLE_BIOMETRIC_SERVER_KEY","Body","BaseForm","extend","Object","assign","className","title","loc","save","showCustomFormErrorCallout","error","_error$responseJSON","errorSummaryKeys","responseJSON","options","includes","type","subtitle","bullets","showMessages","createCallout","BaseAuthenticatorView"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAMA,iCAAiC,GAAG,mEAAmE,CAAA;AAE7G,MAAMC,IAAI,GAAGC,QAAQ,CAACC,MAAM,CAACC,MAAM,CAACC,MAAM,CACxC;AACEC,EAAAA,SAAS,EAAE,4BAA4B;EAEvCC,KAAK,EAAA,YAAG;AACN,IAAA,OAAOC,GAAG,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAA;GAClD;EAEDC,IAAI,EAAA,YAAG;AACL,IAAA,OAAOD,GAAG,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAA;GAC5C;EAEDE,0BAA0B,EAAA,UAACC,KAAK,EAAE;AAAA,IAAA,IAAAC,mBAAA,CAAA;AAChC,IAAA,MAAMC,gBAAgB,GAAGF,KAAK,KAALA,IAAAA,IAAAA,KAAK,wBAAAC,mBAAA,GAALD,KAAK,CAAEG,YAAY,MAAAF,IAAAA,IAAAA,mBAAA,KAAnBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,mBAAA,CAAqBC,gBAAgB,CAAA;AAC9D,IAAA,IAAIE,OAAO,CAAA;IACX,IAAIF,gBAAgB,IAAIA,gBAAgB,CAACG,QAAQ,CAAChB,iCAAiC,CAAC,EAAE;AACpFe,MAAAA,OAAO,GAAG;AACRE,QAAAA,IAAI,EAAE,OAAO;AACbX,QAAAA,SAAS,EAAE,gCAAgC;AAC3CC,QAAAA,KAAK,EAAEC,GAAG,CAAC,kEAAkE,EAAE,OAAO,CAAC;AACvFU,QAAAA,QAAQ,EAAEV,GAAG,CAAC,wEAAwE,EAAE,OAAO,CAAC;QAChGW,OAAO,EAAE,CACPX,GAAG,CAAC,mEAAmE,EAAE,OAAO,CAAC,EACjFA,GAAG,CAAC,mEAAmE,EAAE,OAAO,CAAC,EACjFA,GAAG,CAAC,mEAAmE,EAAE,OAAO,CAAC,CAAA;OAEpF,CAAA;AACD,MAAA,IAAI,CAACY,YAAY,CAACC,aAAa,CAACN,OAAO,CAAC,CAAC,CAAA;AACzC,MAAA,OAAO,IAAI,CAAA;AACb,KAAA;AACF,GAAA;AACF,CACF,CAAC,CAAC,CAAA;AAEF,kCAAeO,qBAAqB,CAACnB,MAAM,CAAC;AAC1CF,EAAAA,IAAI,EAAJA,IAAAA;AACF,CAAC,CAAC;;;;"}