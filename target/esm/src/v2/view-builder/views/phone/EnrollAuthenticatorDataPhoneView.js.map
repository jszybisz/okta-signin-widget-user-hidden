{"version":3,"file":"EnrollAuthenticatorDataPhoneView.js","sources":["../../../../../../../src/v2/view-builder/views/phone/EnrollAuthenticatorDataPhoneView.js"],"sourcesContent":["import { _, loc, Model } from '@okta/courage';\nimport { BaseForm, BaseView } from '../../internals';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\nimport CountryUtil from '../../../../util/CountryUtil';\n\nconst Body = BaseForm.extend({\n\n  className: 'phone-authenticator-enroll',\n\n  title() {\n    return loc('oie.phone.enroll.title', 'login');\n  },\n\n  subtitle() {\n    return this.model.get('authenticator.methodType') === 'voice'\n      ? loc('oie.phone.enroll.call.subtitle', 'login')\n      : loc('oie.phone.enroll.sms.subtitle', 'login');\n  },\n\n  render() {\n    BaseForm.prototype.render.apply(this, arguments);\n    this.el.querySelector('.phone-authenticator-enroll__phone-code').innerText = `+${this.model.get('phoneCode')}`;\n  },\n\n  handlePhoneCodeChange() {\n    const countryCodeField = this.el.querySelector('.phone-authenticator-enroll__phone-code');\n    countryCodeField.innerText = `+${this.model.get('phoneCode')}`;\n  },\n\n  save() {\n    return this.model.get('authenticator.methodType') === 'voice'\n      ? loc('oie.phone.call.primaryButton', 'login')\n      : loc('oie.phone.sms.primaryButton', 'login');\n  },\n\n  getUISchema() {\n    const uiSchemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n\n    // TODO: Using underscore to support IE, replace with Array.prototype methods (find, findIndex) when IE\n    // support is removed\n    const phoneNumberUISchemaIndex = _.findIndex(uiSchemas, ({ name }) => name === 'authenticator.phoneNumber');\n\n    const countryUISchema = {\n      'label-top': true,\n      label: loc('mfa.country', 'login'),\n      type: 'select',\n      options: CountryUtil.getCountries(),\n      name: 'country',\n      wide: true,\n    };\n\n    const inputId = 'okta-phone-number-input';\n    \n    // Create an input group - serves as a display wrapper\n    const phoneNumberWithCodeUISchema = {\n      label: loc('mfa.phoneNumber.placeholder', 'login'),\n      inputId,\n      type: 'group',\n      modelType: 'string',\n      'label-top': true,\n      name: 'phoneCode',\n      className : 'phone-authenticator-enroll__phone',\n      input: [\n        {\n          type: 'label',\n          /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n          label: `+${this.model.get('phoneCode')}`,\n          className: 'phone-authenticator-enroll__phone-code no-translate',\n        },\n        Object.assign({ inputId }, uiSchemas[phoneNumberUISchemaIndex]),\n      ],\n    };\n\n    const extensionUISchema = {\n      label: loc('phone.extention.label', 'login'),\n      type: 'text',\n      className: 'phone-authenticator-enroll__phone-ext',\n      'label-top': true,\n      name: 'extension',\n      showWhen: {\n        'authenticator.methodType': 'voice'\n      }\n    };\n\n    if (phoneNumberUISchemaIndex !== -1) {\n      // Replace phoneNumberUISchema..\n      uiSchemas.splice(phoneNumberUISchemaIndex, 1, phoneNumberWithCodeUISchema);\n      // Add countryUISchema before & extensionUISchema after phone..\n      uiSchemas.splice(phoneNumberUISchemaIndex, 0, countryUISchema);\n      uiSchemas.splice(phoneNumberUISchemaIndex + 2, 0, extensionUISchema);\n    }\n\n    const methodType = _.find(uiSchemas,  ({ name }) => name === 'authenticator.methodType');\n\n    if (methodType && methodType.options.length === 1) {\n      methodType.className = 'hide';\n    }\n\n    return uiSchemas;\n  },\n\n  updateConditionalText() {\n    this.el.querySelector('.okta-form-subtitle').innerText = this.subtitle();\n    this.el.querySelector('input[type=\"submit\"]').value = this.save();\n  },\n\n  initialize() {\n    BaseForm.prototype.initialize.apply(this, arguments);\n    this.listenTo(this.model, 'change:authenticator.methodType', this.updateConditionalText);\n    this.listenTo(this.model, 'change:phoneCode', this.handlePhoneCodeChange.bind(this));\n  },\n});\n\nexport default BaseAuthenticatorView.extend({\n\n  Body,\n\n  createModelClass() {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n    const local = Object.assign(\n      {\n        country: {\n          'value': this.settings.get('defaultCountryCode'),\n          'type': 'string',\n        },\n        extension: {\n          'type': 'string',\n        },\n      },\n      ModelClass.prototype.local,\n    );\n    const derived = Object.assign(\n      {\n        phoneCode: {\n          deps: [ 'country' ],\n          fn: function(country) {\n            return CountryUtil.getCallingCodeForCountry(country);\n          },\n        },\n      },\n      ModelClass.prototype.derived,\n    );\n    return ModelClass.extend({\n      local,\n      derived,\n      toJSON: function() {\n        const modelJSON = Model.prototype.toJSON.call(this, arguments);\n        const extension = this.get('extension');\n        const phoneCode = this.get('phoneCode');\n\n        // Add country code..\n        let formattedPhoneNumber = `+${phoneCode}${modelJSON.authenticator.phoneNumber}`;\n\n        // Add extension if present..\n        if (modelJSON.authenticator.methodType === 'voice' && extension?.trim().length) {\n          formattedPhoneNumber = `${formattedPhoneNumber}x${extension}`;\n        }\n        // Override phone with formatted number..\n        modelJSON.authenticator.phoneNumber = formattedPhoneNumber;\n        return modelJSON;\n      },\n    });\n  },\n});\n"],"names":["Body","BaseForm","extend","className","title","loc","subtitle","model","get","render","prototype","apply","arguments","el","querySelector","innerText","handlePhoneCodeChange","countryCodeField","save","getUISchema","uiSchemas","phoneNumberUISchemaIndex","_","findIndex","name","countryUISchema","label","type","options","CountryUtil","getCountries","wide","inputId","phoneNumberWithCodeUISchema","modelType","input","Object","assign","extensionUISchema","showWhen","splice","methodType","find","length","updateConditionalText","value","initialize","listenTo","bind","BaseAuthenticatorView","createModelClass","ModelClass","BaseView","local","country","settings","extension","derived","phoneCode","deps","fn","getCallingCodeForCountry","toJSON","modelJSON","Model","call","formattedPhoneNumber","authenticator","phoneNumber","trim"],"mappings":"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"}