{"version":3,"file":"BaseAuthenticatorEmailView.js","sources":["../../../../../../../src/v2/view-builder/views/email/BaseAuthenticatorEmailView.js"],"sourcesContent":["import { loc, createCallout } from '@okta/courage';\nimport { BaseForm } from '../../internals';\nimport email from '../shared/email';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView';\nimport BaseResendView from '../shared/BaseResendView';\nimport BaseFormWithPolling from '../../internals/BaseFormWithPolling';\n\nconst ResendView = BaseResendView.extend(\n  {\n    className: 'hide resend-email-view',\n    events: {\n      'click a.resend-link' : 'handleResendLink'\n    },\n    modelEvents: {\n      'error': 'handleError'\n    },\n\n    initialize() {\n      this.add(createCallout({\n        content: `${loc('email.code.not.received', 'login')}\n        <a class='resend-link'>${loc('email.button.resend', 'login')}</a>`,\n        type: 'warning',\n      }));\n    },\n\n    hideResendViewAndShowAfterTimeout() {\n      // Hide warning, but reinitiate to show warning again after some threshold of polling\n      if (!this.$el.hasClass('hide')) {\n        this.$el.addClass('hide');\n      }\n      this.showCalloutAfterTimeout();\n    },\n\n    handleResendLink(ev) {\n      ev?.preventDefault();\n      this.options.appState.trigger('invokeAction', this.options.resendEmailAction);\n      this.hideResendViewAndShowAfterTimeout();\n    },\n\n    handleError() {\n      this.hideResendViewAndShowAfterTimeout();\n    },\n  },\n);\n\nconst Body = BaseFormWithPolling.extend(Object.assign(\n  {\n    save() {\n      return loc('mfa.challenge.verify', 'login');\n    },\n    initialize() {\n      BaseFormWithPolling.prototype.initialize.apply(this, arguments);\n      this.startPolling();\n    },\n\n    postRender() {\n      BaseForm.prototype.postRender.apply(this, arguments);\n\n      // Add 1 instance of resend view\n      if (!this.$el.find('.resend-email-view').length) {\n        this.add(ResendView, {\n          selector: '.o-form-info-container',\n          prepend: true,\n          options: {\n            resendEmailAction: this.resendEmailAction,\n          }\n        });\n      }\n    },\n\n    saveForm() {\n      BaseForm.prototype.saveForm.apply(this, arguments);\n      this.stopPolling();\n    },\n\n    remove() {\n      BaseForm.prototype.remove.apply(this, arguments);\n      this.stopPolling();\n    },\n\n    triggerAfterError(model, error) {\n      BaseForm.prototype.triggerAfterError.apply(this, arguments);\n      const isFormPolling = !!this.polling;\n      this.stopPolling();\n\n      if (error.responseJSON?.errorSummaryKeys?.includes('idx.session.expired')) {\n        // Do NOT resume polling since session is invalid and polling is already stopped\n        return;\n      }\n\n      if (this.isRateLimitError(error)) {\n        // When polling encounter rate limit error, wait 60 sec for rate limit bucket to reset\n        // before polling again & hide error message\n        if (isFormPolling) {\n          setTimeout(() => {\n            model.trigger('clearFormError');\n          }, 0);\n        }\n        this.startPolling(60000);\n      } else {\n        this.startPolling(this.options.appState.get('dynamicRefreshInterval'));\n      }\n    },\n\n    isRateLimitError(error) {\n      return (error.responseJSON?.errorSummaryKeys?.includes('tooManyRequests') // IDX API error\n        || (error.responseJSON?.errorCode === 'E0000047') && !error.responseJSON?.errorIntent); // Standard API error\n    },\n  },\n  email,\n));\n\nexport default BaseAuthenticatorView.extend({\n  Body,\n});\n"],"names":["ResendView","BaseResendView","extend","className","events","modelEvents","initialize","add","createCallout","content","loc","type","hideResendViewAndShowAfterTimeout","$el","hasClass","addClass","showCalloutAfterTimeout","handleResendLink","ev","preventDefault","options","appState","trigger","resendEmailAction","handleError","Body","BaseFormWithPolling","Object","assign","save","prototype","apply","arguments","startPolling","postRender","BaseForm","find","length","selector","prepend","saveForm","stopPolling","remove","triggerAfterError","model","error","_error$responseJSON","_error$responseJSON$e","isFormPolling","polling","responseJSON","errorSummaryKeys","includes","isRateLimitError","setTimeout","get","_error$responseJSON2","_error$responseJSON2$","_error$responseJSON3","_error$responseJSON4","errorCode","errorIntent","email","BaseAuthenticatorView"],"mappings":"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"}