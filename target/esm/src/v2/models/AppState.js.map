{"version":3,"file":"AppState.js","sources":["../../../../../src/v2/models/AppState.ts"],"sourcesContent":["/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Model, ModelProperty } from '@okta/courage';\nimport Logger from 'util/Logger';\nimport {\n  FORMS_WITHOUT_SIGNOUT,\n  FORMS_WITH_STATIC_BACK_LINK,\n  FORMS_FOR_VERIFICATION,\n  AUTHENTICATOR_KEY,\n  FORMS,\n} from '../ion/RemediationConstants';\nimport { createOVOptions } from '../ion/ui-schema/ion-object-handler';\nimport { _ } from '../mixins/mixins';\nimport { executeHooksBefore, executeHooksAfter } from 'util/Hooks';\nimport Settings from 'models/Settings';\nimport Hooks from 'models/Hooks';\nimport { RecoverableError } from 'util/OAuthErrors';\nimport { IdxRemediation } from '@okta/okta-auth-js';\nimport BrowserFeatures from 'util/BrowserFeatures';\n\nconst UNKNOWN_USER_I8N_KEY = \"idx.unknown.user\";\n/**\n * Keep track of stateMachine with this special model. Similar to `src/models/AppState.js`\n */\n\nconst local: Record<string, ModelProperty> = {\n  user: 'object',        // optional\n  currentFormName: 'string',\n  idx: 'object',\n  remediations: 'array',\n  dynamicRefreshInterval: 'number',\n  deviceFingerprint: 'string',\n  hooks: 'object' // instance of models/Hooks\n};\n\nconst derived: Record<string, ModelProperty> = {\n  authenticatorProfile: {\n    deps: ['currentAuthenticator', 'currentAuthenticatorEnrollment'],\n    fn(currentAuthenticator = { profile: undefined }, currentAuthenticatorEnrollment = { profile: undefined }) {\n      return currentAuthenticator.profile\n        || currentAuthenticatorEnrollment.profile\n        || {};\n    },\n  },\n  authenticatorKey: {\n    deps: ['currentAuthenticator', 'currentAuthenticatorEnrollment'],\n    fn(currentAuthenticator = { key: undefined }, currentAuthenticatorEnrollment = { key: undefined }) {\n      return currentAuthenticator.key\n        || currentAuthenticatorEnrollment.key\n        || '';\n    },\n  },\n  authenticatorMethodType: {\n    deps: ['currentAuthenticator', 'currentAuthenticatorEnrollment'],\n    fn(currentAuthenticator = { methods: undefined }, currentAuthenticatorEnrollment = { methods: undefined }) {\n      return currentAuthenticator.methods && currentAuthenticator.methods[0].type\n        || currentAuthenticatorEnrollment.methods && currentAuthenticatorEnrollment.methods[0].type\n        || '';\n    },\n  },\n  isPasswordRecovery: {\n    deps: ['recoveryAuthenticator'],\n    fn: function(recoveryAuthenticator = { type: undefined }) {\n      return recoveryAuthenticator?.type === 'password';\n    }\n  }\n};\n\nexport type AppStateProps = typeof local & typeof derived;\n\nexport default class AppState extends Model {\n  settings: Settings;\n  hooks: Hooks;\n  \n  constructor(attributes, options) {\n    super(attributes, options);\n    this.settings = options.settings;\n    this.hooks = options.hooks;\n  }\n\n  get<A extends Backbone._StringKey<AppStateProps>>(attributeName: A): any {\n    return Model.prototype.get.call(this, attributeName);\n  }\n\n  preinitialize(...args) {\n    this.local = local;\n    this.derived = derived;\n    Model.prototype.preinitialize.apply(this, args);\n  }\n\n  isIdentifierOnlyView() {\n    return !this.get('remediations')?.find(({ name }) => name === 'identify')\n      ?.uiSchema?.find(({ name }) => name === 'credentials.passcode');\n  }\n\n  hasRemediationObject(formName) {\n    return this.get('idx').neededToProceed.find((remediation) => remediation.name === formName);\n  }\n\n  hasActionObject(actionName) {\n    return !!this.get('idx')?.actions?.[actionName];\n  }\n\n  getRemediationAuthenticationOptions(formName) {\n    const form = this.hasRemediationObject(formName);\n    if (!form) {\n      return [];\n    }\n    const authenticator = form.value.find((value) => value.name === 'authenticator');\n    let authenticatorOptions = authenticator?.options || [];\n    // OV is a special case, so process OV options\n    authenticatorOptions = [...authenticatorOptions]; //clone it since we are changing it for OV\n    createOVOptions(authenticatorOptions);\n    return authenticatorOptions;\n  }\n\n  getActionByPath(actionPath) {\n    const paths = actionPath.split('.');\n    let targetObject;\n    if (paths.length === 1) {\n      targetObject = this.get('idx').actions;\n    } else {\n      targetObject = this.get(paths.shift());\n    }\n    // Limitation\n    // At the time of writting, action only lives in first level of state objects.\n    const actionName = paths.shift();\n    if (targetObject && _.isFunction(targetObject[actionName])) {\n      return targetObject[actionName];\n    } else {\n      return null;\n    }\n  }\n\n  getCurrentViewState() {\n    const currentFormName = this.get('currentFormName');\n\n    if (!currentFormName) {\n      return;\n    }\n\n    // didn't expect `remediations` is empty. See `setIonResponse`.\n    const currentViewState = this.get('remediations').filter(r => r.name === currentFormName)[0];\n\n    if (!currentViewState) {\n      Logger.error('Panic!!');\n      Logger.error(`\\tCannot find view state for form ${currentFormName}.`);\n      const allFormNames = this.get('remediations').map(r => r.name);\n      Logger.error(`\\tAll available form names: ${allFormNames}`);\n    }\n\n    return currentViewState;\n  }\n\n  /**\n   * Returns ui schema of the form field from current view state\n   * @param {string} fieldName\n   * @returns {}\n   */\n  getSchemaByName(fieldName) {\n    const currentViewState = this.getCurrentViewState();\n    if(currentViewState) {\n      const uiSchema = currentViewState.uiSchema;\n      return uiSchema.find(({ name }) => name === fieldName);\n    }\n  }\n\n  /**\n   * Returns the displayName of the authenticator\n   * @returns {string}\n   */\n  getAuthenticatorDisplayName() {\n    const currentAuthenticator = this.get('currentAuthenticator') || {};\n    const currentAuthenticatorEnrollment = this.get('currentAuthenticatorEnrollment') || {};\n\n    // For enrollment and certain verification flows, the currentAuthenticator object will be present.\n    // If not, we're likely in a traditional verify/challenge flow.\n    return currentAuthenticator.displayName || currentAuthenticatorEnrollment.displayName;\n  }\n\n  /**\n   * Checks to see if we're in an authenticator challenge flow.\n   * @returns {boolean}\n   */\n  isAuthenticatorChallenge() {\n    const currentFormName = this.get('currentFormName');\n    return FORMS_FOR_VERIFICATION.includes(currentFormName);\n  }\n\n  shouldReRenderView(transformedResponse) {\n    if (transformedResponse?.idx?.hasFormError) {\n      return false;\n    }\n\n    const previousRawState = this.has('idx') ? this.get('idx').rawIdxState : null;\n\n    const identicalResponse = _.isEqual(\n      _.nestedOmit(transformedResponse.idx.rawIdxState, ['expiresAt', 'refresh', 'stateHandle', 'headers']),\n      _.nestedOmit(previousRawState, ['expiresAt', 'refresh', 'stateHandle', 'headers']));\n\n    if (identicalResponse) {\n      this.set('dynamicRefreshInterval', this.getRefreshInterval(transformedResponse));\n    }\n\n    return this._isReRenderRequired(identicalResponse, transformedResponse, previousRawState);\n  }\n\n  getRefreshInterval(transformedResponse) {\n    // Only polling refresh interval has changed in the response,\n    // make sure to update the correct poll view's refresh value\n    const currentFormName = this.get('currentFormName');\n    const currentViewState = transformedResponse.remediations.filter(r => r.name === currentFormName)[0];\n    // Get new refresh interval for either: remediations, authenticator, or authenticator enrollment\n    return currentViewState.refresh ||\n      transformedResponse.currentAuthenticatorEnrollment?.poll?.refresh ||\n      transformedResponse.currentAuthenticator?.poll?.refresh;\n  }\n\n  // Sign Out link will be displayed in the footer of a form, unless:\n  // - widget configuration set hideSignOutLinkInMFA or mfaOnlyFlow to true\n  // - cancel remediation form is not present in the response\n  // - form is part of our list FORMS_WITHOUT_SIGNOUT\n  shouldShowSignOutLinkInCurrentForm(hideSignOutLinkInMFA) {\n    const idxActions = this.get('idx') && this.get('idx').actions;\n    const currentFormName = this.get('currentFormName');\n\n    return !hideSignOutLinkInMFA\n      && _.isFunction(idxActions?.cancel)\n      && !FORMS_WITHOUT_SIGNOUT.includes(currentFormName);\n  }\n\n  containsMessageWithI18nKey(keys) {\n    if (!Array.isArray(keys)) {\n      keys = [keys];\n    }\n    const messagesObjs = this.get('messages');\n    return messagesObjs && Array.isArray(messagesObjs.value)\n      && messagesObjs.value.some(messagesObj => _.contains(keys, messagesObj.i18n?.key));\n  }\n\n  containsMessageStartingWithI18nKey(keySubStr) {\n    const messagesObjs = this.get('messages');\n    return messagesObjs && Array.isArray(messagesObjs.value)\n      && messagesObjs.value.some(messagesObj => messagesObj.i18n?.key.startsWith(keySubStr));\n  }\n\n  clearAppStateCache() {\n    // clear appState before setting new values\n    const attrs = {};\n    for (const key in this.attributes) {\n      if (key !== 'currentFormName') {\n        attrs[key] = void 0;\n      }\n    }\n    this.set(attrs, Object.assign({}, { unset: true, silent: true }));\n    // clear cache for derived props.\n    this.trigger('cache:clear');\n  }\n\n  chooseRemediation(transformedResponse): IdxRemediation | undefined {\n    if (_.isEmpty(transformedResponse.remediations)) {\n      return;\n    }\n\n    const firstRemediation = transformedResponse.remediations[0];\n\n    // Special case: Okta Verify: show select enrollment channel instead of QR code on mobile\n    if (firstRemediation.name === 'enroll-poll'\n      && this.get('authenticatorKey') === AUTHENTICATOR_KEY.OV\n      && (BrowserFeatures.isAndroid() || BrowserFeatures.isIOS())\n      && transformedResponse.currentAuthenticator?.contextualData?.selectedChannel === 'qrcode'\n    ) {\n        return transformedResponse.remediations.find(r => r.name === 'select-enrollment-channel')\n    }\n\n    // Default case: return the first remediation in the list\n    return firstRemediation;\n  }\n\n  async setIonResponse(transformedResponse) {\n    const doRerender = this.shouldReRenderView(transformedResponse);\n    this.clearAppStateCache();\n    // set new app state properties\n    this.set(transformedResponse);\n\n    if (doRerender) {\n      const remediation = this.chooseRemediation(transformedResponse);\n      let currentFormName = null;\n      if (remediation) {\n        currentFormName = remediation.name;\n      } else {\n        Logger.error('Panic!!');\n        Logger.error('\\tNo remediation found.');\n        Logger.error('\\tHere is the entire response');\n        Logger.error(JSON.stringify(transformedResponse, null, 2));\n      }\n\n      const hook = this.hooks?.getHook(currentFormName); // may be undefined\n      await executeHooksBefore(hook);\n  \n      this.unset('currentFormName', { silent: true });\n      // make sure change `currentFormName` is last step.\n      // change `currentFormName` will re-render FormController,\n      // which may depend on other derived properties hence\n      // those derived properties must be re-computed before\n      // re-rendering controller.\n      this.set({ currentFormName });\n\n      await executeHooksAfter(hook);\n    }\n  }\n\n  setNonIdxError(error: RecoverableError<any>) {\n    this.set('remediations', [{ name: FORMS.TERMINAL }]);\n    this.set('messages', { value: [\n      {\n        message: error.errorDetails.errorSummary,\n        class: 'ERROR'\n      }\n    ]})\n    this.set('currentFormName', FORMS.TERMINAL);\n  }\n\n  getUser() {\n    return this.get('user');\n  }\n\n  _isReRenderRequired(identicalResponse, transformedResponse, previousRawState) {\n    let reRender = true;\n\n    const isPreviousStateError = this.get('idx')?.hasFormError;\n    if (isPreviousStateError && this._isChallengeAuthenticatorPoll(transformedResponse, previousRawState)) {\n      reRender = false;\n    }\n\n    if (identicalResponse) {\n      /**\n       * returns false: When new response is same as last.\n       * usually happens during polling when pipeline doesn't proceed to next step.\n       * expiresAt will be different for each response, hence compare objects without that property\n       */\n      reRender = false;\n      if (this.get('currentFormName') === 'poll') {\n        /**\n         * returns true: We want to force reRender when currentForm is poll because request has to reinitiate\n         * based on new refresh and UI has to reflect new timer.\n         * We dont technical poll here we just make a request after the specified refresh time each time\n         * we get a new response.\n         */\n        reRender = true;\n      } else if (FORMS_WITH_STATIC_BACK_LINK.includes(this.get('currentFormName'))) {\n        /**\n         * returns true: We want to force reRender if you go back to selection screen from challenge or enroll screen\n         * and re-select the same authenticator for challenge. In this case also new response will be identical\n         * to the old response.\n         */\n        reRender = true;\n      } else if (this.containsMessageWithI18nKey(UNKNOWN_USER_I8N_KEY)) {\n        /**\n         * Need to re-render or else form will be stuck in saving mode.\n         * This message is a form warning that can result in identical responses if the user enters the same\n         * username as the one in the last message warning.\n         */\n        reRender = true;\n      }\n    }\n\n    return reRender;\n  }\n\n  /**\n   * This is to account for the edge case introduced by this issue: OKTA-419210. With the current idx remediations,\n   * there's no good way to generalize this as the backend handles the authenticators for phone, sms and \n   * email differently. Although not ideal, we have to keep this check in for now until we find a better solution.\n   */\n  _isChallengeAuthenticatorPoll(transformedResponse, previousRawState) {\n    const isSameExceptMessages = _.isEqual(\n      _.nestedOmit(transformedResponse.idx.rawIdxState, ['expiresAt', 'refresh', 'stateHandle', 'headers']),\n      _.nestedOmit(previousRawState, ['expiresAt', 'refresh', 'stateHandle', 'messages', 'headers']));\n\n    const isChallengeAuthenticator = this.get('currentFormName') === 'challenge-authenticator';\n    const isCurrentAuthenticatorEmail = this.get('currentAuthenticatorEnrollment')?.key === AUTHENTICATOR_KEY.EMAIL;\n\n    return isSameExceptMessages && isChallengeAuthenticator && isCurrentAuthenticatorEmail;\n  }\n}\n"],"names":["UNKNOWN_USER_I8N_KEY","local","user","currentFormName","idx","remediations","dynamicRefreshInterval","deviceFingerprint","hooks","derived","authenticatorProfile","deps","fn","currentAuthenticator","profile","undefined","currentAuthenticatorEnrollment","authenticatorKey","key","authenticatorMethodType","methods","type","isPasswordRecovery","recoveryAuthenticator","AppState","Model","constructor","attributes","options","settings","get","attributeName","prototype","call","preinitialize","args","apply","isIdentifierOnlyView","_this$get","_this$get$find","_this$get$find$uiSche","find","name","uiSchema","hasRemediationObject","formName","neededToProceed","remediation","hasActionObject","actionName","_this$get2","_this$get2$actions","actions","getRemediationAuthenticationOptions","form","authenticator","value","authenticatorOptions","createOVOptions","getActionByPath","actionPath","paths","split","targetObject","length","shift","_","isFunction","getCurrentViewState","currentViewState","filter","r","Logger","error","allFormNames","map","getSchemaByName","fieldName","getAuthenticatorDisplayName","displayName","isAuthenticatorChallenge","FORMS_FOR_VERIFICATION","includes","shouldReRenderView","transformedResponse","_transformedResponse$","hasFormError","previousRawState","has","rawIdxState","identicalResponse","isEqual","nestedOmit","set","getRefreshInterval","_isReRenderRequired","_transformedResponse$2","_transformedResponse$3","_transformedResponse$4","_transformedResponse$5","refresh","poll","shouldShowSignOutLinkInCurrentForm","hideSignOutLinkInMFA","idxActions","cancel","FORMS_WITHOUT_SIGNOUT","containsMessageWithI18nKey","keys","Array","isArray","messagesObjs","some","messagesObj","_messagesObj$i18n","contains","i18n","containsMessageStartingWithI18nKey","keySubStr","_messagesObj$i18n2","startsWith","clearAppStateCache","attrs","Object","assign","unset","silent","trigger","chooseRemediation","_transformedResponse$6","_transformedResponse$7","isEmpty","firstRemediation","AUTHENTICATOR_KEY","OV","BrowserFeatures","isAndroid","isIOS","contextualData","selectedChannel","setIonResponse","doRerender","_this$hooks","JSON","stringify","hook","getHook","executeHooksBefore","executeHooksAfter","setNonIdxError","FORMS","TERMINAL","message","errorDetails","errorSummary","class","getUser","_this$get3","reRender","isPreviousStateError","_isChallengeAuthenticatorPoll","FORMS_WITH_STATIC_BACK_LINK","_this$get4","isSameExceptMessages","isChallengeAuthenticator","isCurrentAuthenticatorEmail","EMAIL"],"mappings":"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"}